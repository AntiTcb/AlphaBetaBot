// <auto-generated />
using System;
using AlphaBetaBot.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AlphaBetaBot.Data.Migrations
{
    [DbContext(typeof(AbfDbContext))]
    partial class AbfDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("AlphaBetaBot.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("key")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("LastUpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("last_updated_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SnowflakeId")
                        .HasColumnName("snowflake_id")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("AlphaBetaBot.Data.WowCharacter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("key")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CharacterName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Class")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("LastUpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("last_updated_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<int?>("WowRaidId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("WowRaidId");

                    b.ToTable("characters");
                });

            modelBuilder.Entity("AlphaBetaBot.Data.WowRaid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("key")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("LastUpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("last_updated_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Raid")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("RaidTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("raids");
                });

            modelBuilder.Entity("AlphaBetaBot.Data.WowCharacter", b =>
                {
                    b.HasOne("AlphaBetaBot.Data.User", "Owner")
                        .WithMany("Characters")
                        .HasForeignKey("OwnerId");

                    b.HasOne("AlphaBetaBot.Data.WowRaid", null)
                        .WithMany("Raiders")
                        .HasForeignKey("WowRaidId");
                });
#pragma warning restore 612, 618
        }
    }
}
