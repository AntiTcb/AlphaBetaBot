// <auto-generated />
using System;
using AlphaBetaBot.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AlphaBetaBot.Data.Migrations
{
    [DbContext(typeof(AbfDbContext))]
    partial class AbfDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("AlphaBetaBot.Data.Raid", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2020, 1, 24, 22, 28, 15, 692, DateTimeKind.Unspecified).AddTicks(5239), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<int>("RaidLocationId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("RaidTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("RaidLocationId");

                    b.ToTable("raids");
                });

            modelBuilder.Entity("AlphaBetaBot.Data.RaidLocation", b =>
                {
                    b.Property<int>("RaidLocationId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("RaidLocationId");

                    b.ToTable("raid_locations");
                });

            modelBuilder.Entity("AlphaBetaBot.Data.RaidParticipant", b =>
                {
                    b.Property<decimal>("RaidId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2020, 1, 24, 22, 28, 15, 694, DateTimeKind.Unspecified).AddTicks(8617), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("RaidId", "CharacterId");

                    b.HasIndex("CharacterId");

                    b.ToTable("raid_participants");
                });

            modelBuilder.Entity("AlphaBetaBot.Data.User", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2020, 1, 24, 22, 28, 15, 680, DateTimeKind.Unspecified).AddTicks(1788), new TimeSpan(0, 0, 0, 0, 0)));

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("AlphaBetaBot.Data.WowCharacter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CharacterName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Class")
                        .HasColumnType("integer");

                    b.Property<decimal?>("OwnerId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("characters");
                });

            modelBuilder.Entity("AlphaBetaBot.Data.Raid", b =>
                {
                    b.HasOne("AlphaBetaBot.Data.RaidLocation", "RaidLocation")
                        .WithMany()
                        .HasForeignKey("RaidLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AlphaBetaBot.Data.RaidParticipant", b =>
                {
                    b.HasOne("AlphaBetaBot.Data.WowCharacter", "Character")
                        .WithMany("RaidsAttending")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlphaBetaBot.Data.Raid", "Raid")
                        .WithMany("Participants")
                        .HasForeignKey("RaidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AlphaBetaBot.Data.WowCharacter", b =>
                {
                    b.HasOne("AlphaBetaBot.Data.User", "Owner")
                        .WithMany("Characters")
                        .HasForeignKey("OwnerId");
                });
#pragma warning restore 612, 618
        }
    }
}
